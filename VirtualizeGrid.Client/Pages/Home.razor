@page "/"
@using Grpc.Net.Client
@using VirtualizedGrid.Protos
@inject GrpcChannel Channel

<h3>Parts List</h3>

<!-- Display parts data -->
<Virtualize Items="@parts" Context="part" ItemSize="50">
    <div style="padding: 5px; border-bottom: 1px solid #ccc;">
        <strong>@part.Name</strong> - @part.Status <br />
        Created on: @part.CreationDate.ToString("yyyy-MM-dd")
    </div>
</Virtualize>

<!-- Progress bar -->
<div class="progress-bar">
    <div class="progress" style="width: @ProgressPercentage%;">@ProgressPercentage% loaded</div>
</div>

@code {
    private List<PartDto> parts = new();
    private int ProgressPercentage = 0;

    protected override async Task OnInitializedAsync()
    {
        var client = new PartService.PartServiceClient(Channel);
        var request = new PartsRequest { ChunkSize = 100 };

        using var call = client.GetParts(request);
        var count = 0;
        try
        {


            while (await call.ResponseStream.MoveNext(CancellationToken.None))
            {
                var part = call.ResponseStream.Current;
                parts.Add(new PartDto
                {
                    Id = Guid.Parse(part.Id),
                    Name = part.Name,
                    CreationDate = DateTimeOffset.Parse(part.CreationDate),
                    Status = (PartStatus)part.Status
                });

                count++;
                ProgressPercentage = (count * 100) / 1000; // Adjust based on your target item count
            }
        }catch(Exception ex)
        {
            
        }
    }

    public class PartDto
    {
        public Guid Id { get; set; }
        public string Name { get; set; }
        public DateTimeOffset CreationDate { get; set; }
        public PartStatus Status { get; set; }
    }

    public enum PartStatus
    {
        Available,
        OutOfStock,
        Discontinued,
        BackOrder
    }
}
